<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.community.dao.CommentMapper">
    <sql id="insertFields">
        user_id,entity_type,entity_id,target_id,content,status,create_time
    </sql>
    <sql id="selectFields">
        id,user_id,entity_type,entity_id,target_id,content,status,create_time
    </sql>
    <insert id="insertComment" parameterType="Comment" keyProperty="id">
        insert into
        comment(<include refid="insertFields"></include>)
        values(#{userId},#{entityType},#{entityId},#{targetId},#{content},#{status},#{createTime})
    </insert>
    <update id="updateCommentStatus">
        update comment
        set status = #{status}
        where id = #{commentId}
    </update>
    <update id="updateListCommentStatus">
        update comment
        set status = #{status}
        where id in
        <foreach collection="commentsId" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </update>

    <select id="selectCommentByEntity" resultType="com.liu.community.entity.Comment">
        select <include refid="selectFields"></include>
        from comment
        where status = 0
        and entity_type = #{entityType}
        and entity_id = #{entityId}
        order by create_time
        limit #{offset}, #{limit}
    </select>
    <select id="selectCountByEntity" resultType="int">
        select count(id)
        from comment
        where status = 0
          and entity_type = #{entityType}
          and entity_id = #{entityId}
    </select>
    <select id="selectCommentById" resultType="com.liu.community.entity.Comment">
        select <include refid="selectFields"></include>
        from comment
        where id = #{id}
    </select>
    <select id="selectCommentByUserId" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where user_id = #{userId}
        and status != 1
        order by create_time desc
        limit #{offset},#{limit}
    </select>
    <select id="selectCommentCountById" resultType="java.lang.Integer">
        select count(id)
        from comment
        where user_id = #{userId}
        and status != 1
    </select>
    <select id="selectCommentByEntityId" resultType="com.liu.community.entity.Comment">
        select <include refid="selectFields"></include>
        from comment
        where entity_id = #{entityId}
        and status!=1
--         and entity_type = 2
    </select>
</mapper>